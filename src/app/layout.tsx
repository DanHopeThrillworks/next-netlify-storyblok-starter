import type { Metadata } from "next";
import Script from "next/script";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const weglotApiKey = process.env.NEXT_PUBLIC_WEGLOT_API_KEY;

type WeglotGlobal = {
  initialize: (config: { api_key: string }) => void;
};

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Script
          src="https://cdn.weglot.com/weglot.min.js"
          strategy="beforeInteractive"
          onLoad={() => {
            const apiKey = weglotApiKey;
            if (!apiKey) {
              console.warn(
                "Weglot: NEXT_PUBLIC_WEGLOT_API_KEY is missing. Set it in your .env.local",
              );
              return;
            }
            const wg = (globalThis as { Weglot?: WeglotGlobal }).Weglot;
            if (!wg || typeof wg.initialize !== "function") {
              console.error(
                "Weglot: global not available after script load; initialization skipped",
              );
              return;
            }
            try {
              wg.initialize({ api_key: apiKey });
            } catch (err) {
              console.error("Weglot: initialization failed", err);
            }
          }}
        />
        {children}
      </body>
    </html>
  );
}
